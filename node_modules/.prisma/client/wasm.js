
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.1
 * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
 */
Prisma.prismaVersion = {
  client: "6.11.1",
  engine: "f40f79ec31188888a2e33acda0ecc8fd10a853a9"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  role: 'role',
  is_verified: 'is_verified',
  supabase_id: 'supabase_id',
  phone: 'phone',
  avatar_url: 'avatar_url',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OrganizationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  contact_email: 'contact_email',
  phone: 'phone',
  address: 'address',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PromoCodeScalarFieldEnum = {
  id: 'id',
  code: 'code',
  description: 'description',
  discount_type: 'discount_type',
  discount_value: 'discount_value',
  max_uses: 'max_uses',
  uses: 'uses',
  valid_from: 'valid_from',
  valid_until: 'valid_until',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OrderPromoScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  promo_code_id: 'promo_code_id',
  discount_applied: 'discount_applied',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ReferralCodeScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  code: 'code',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EmailLogScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  event_id: 'event_id',
  email_type: 'email_type',
  subject: 'subject',
  status: 'status',
  sent_at: 'sent_at',
  error_message: 'error_message',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.WebhookLogScalarFieldEnum = {
  id: 'id',
  target_url: 'target_url',
  event_type: 'event_type',
  order_id: 'order_id',
  event_id: 'event_id',
  user_id: 'user_id',
  payload: 'payload',
  status_code: 'status_code',
  response_text: 'response_text',
  triggered_at: 'triggered_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.WebhookSubscriptionScalarFieldEnum = {
  id: 'id',
  organization_id: 'organization_id',
  target_url: 'target_url',
  event_type: 'event_type',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TrackingVisitScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  event_id: 'event_id',
  utm_source: 'utm_source',
  utm_medium: 'utm_medium',
  utm_campaign: 'utm_campaign',
  utm_content: 'utm_content',
  referrer_url: 'referrer_url',
  landing_page: 'landing_page',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  organization_id: 'organization_id',
  name: 'name',
  description: 'description',
  date: 'date',
  location: 'location',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TicketScalarFieldEnum = {
  id: 'id',
  event_id: 'event_id',
  name: 'name',
  price: 'price',
  type: 'type',
  total: 'total',
  sold: 'sold',
  start_sale_date: 'start_sale_date',
  end_sale_date: 'end_sale_date',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  status: 'status',
  payment_method: 'payment_method',
  amount: 'amount',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  ticket_id: 'ticket_id',
  quantity: 'quantity',
  price_snapshot: 'price_snapshot',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  gateway: 'gateway',
  status: 'status',
  txn_code: 'txn_code',
  paid_at: 'paid_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.CheckinLogScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  ticket_id: 'ticket_id',
  event_id: 'event_id',
  checkin_time: 'checkin_time',
  verified_by: 'verified_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserOrganizationScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  organization_id: 'organization_id',
  role: 'role',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EventSettingScalarFieldEnum = {
  id: 'id',
  event_id: 'event_id',
  setting_key: 'setting_key',
  setting_value: 'setting_value',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ImageScalarFieldEnum = {
  id: 'id',
  file_path: 'file_path',
  file_name: 'file_name',
  file_type: 'file_type',
  file_size: 'file_size',
  alt_text: 'alt_text',
  uploaded_by: 'uploaded_by',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ImageLinkScalarFieldEnum = {
  id: 'id',
  image_id: 'image_id',
  entity_type: 'entity_type',
  entity_id: 'entity_id',
  organization_id: 'organization_id',
  event_id: 'event_id',
  usage_type: 'usage_type',
  linked_at: 'linked_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  USER: 'USER',
  OWNER_ORGANIZER: 'OWNER_ORGANIZER',
  ADMIN_ORGANIZER: 'ADMIN_ORGANIZER',
  ADMIN: 'ADMIN',
  SUPERADMIN: 'SUPERADMIN'
};

exports.Prisma.ModelName = {
  User: 'User',
  Organization: 'Organization',
  PromoCode: 'PromoCode',
  OrderPromo: 'OrderPromo',
  ReferralCode: 'ReferralCode',
  EmailLog: 'EmailLog',
  WebhookLog: 'WebhookLog',
  WebhookSubscription: 'WebhookSubscription',
  TrackingVisit: 'TrackingVisit',
  Event: 'Event',
  Ticket: 'Ticket',
  Order: 'Order',
  OrderItem: 'OrderItem',
  Payment: 'Payment',
  CheckinLog: 'CheckinLog',
  UserOrganization: 'UserOrganization',
  EventSetting: 'EventSetting',
  Image: 'Image',
  ImageLink: 'ImageLink'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
